{"ast":null,"code":"import{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import FiltersBar from'components/FiltersBar/FiltersBar';import CatalogList from'components/CatalogList/CatalogList';import{fetchCampers}from'store/operations';import{Modal}from'components/Modal/Modal';import{selectCampers,selectPage,selectIsLoading,selectError,selectAll}from'store/selectors';import{CatalogPageWrapper,ListWrapper,Button}from'./CatalogPage.module';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CatalogPage=()=>{const campers=useSelector(selectCampers);const page=useSelector(selectPage);const isLoading=useSelector(selectIsLoading);const error=useSelector(selectError);const dispatch=useDispatch();const all=useSelector(selectAll);const[showModal,setShowModal]=useState(false);const[selectedCamper,setSelectedCamper]=useState(null);console.log('all',all);useEffect(()=>{dispatch(fetchCampers());},[dispatch]);if(isLoading&&!error){return/*#__PURE__*/_jsx(\"b\",{children:\"Request in progress...\"});}if(error){return/*#__PURE__*/_jsx(\"b\",{children:error});}const toggleModal=data=>{setShowModal(!showModal);setSelectedCamper(data);};const onLoadMore=()=>{dispatch(fetchCampers(page+1));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(CatalogPageWrapper,{children:[/*#__PURE__*/_jsx(FiltersBar,{}),/*#__PURE__*/_jsxs(ListWrapper,{children:[/*#__PURE__*/_jsx(CatalogList,{campers:campers,toggleModal:toggleModal}),campers.length>0&&!isLoading&&/*#__PURE__*/_jsx(Button,{onClick:onLoadMore,children:\"Load more\"})]})]}),showModal&&/*#__PURE__*/_jsx(Modal,{onClose:toggleModal,campers:selectedCamper})]});};export default CatalogPage;","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","FiltersBar","CatalogList","fetchCampers","Modal","selectCampers","selectPage","selectIsLoading","selectError","selectAll","CatalogPageWrapper","ListWrapper","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CatalogPage","campers","page","isLoading","error","dispatch","all","showModal","setShowModal","selectedCamper","setSelectedCamper","console","log","children","toggleModal","data","onLoadMore","length","onClick","onClose"],"sources":["C:/Projects/camper-rent-app/src/pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FiltersBar from 'components/FiltersBar/FiltersBar';\r\nimport CatalogList from 'components/CatalogList/CatalogList';\r\nimport { fetchCampers } from 'store/operations';\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport { selectCampers, selectPage, selectIsLoading, selectError, selectAll } from 'store/selectors';\r\n\r\nimport { CatalogPageWrapper, ListWrapper, Button } from './CatalogPage.module';\r\n\r\nconst CatalogPage = () => {\r\n  const campers = useSelector(selectCampers);\r\n  const page = useSelector(selectPage);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const dispatch = useDispatch();\r\n\r\n  const all = useSelector(selectAll);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedCamper, setSelectedCamper] = useState(null);\r\n\r\n  console.log('all', all);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCampers());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading && !error) {\r\n    return <b>Request in progress...</b>;\r\n  }\r\n\r\n  if (error) {\r\n    return <b>{error}</b>;\r\n  }\r\n\r\n  const toggleModal = data => {\r\n    setShowModal(!showModal);\r\n    setSelectedCamper(data);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    dispatch(fetchCampers(page + 1));\r\n  };\r\n\r\n  return (\r\n   <>\r\n    <CatalogPageWrapper>\r\n      <FiltersBar />\r\n      <ListWrapper>\r\n        <CatalogList campers={campers} toggleModal={toggleModal}/>\r\n        {campers.length > 0 && !isLoading && <Button onClick={onLoadMore}>Load more</Button>}\r\n      </ListWrapper>\r\n    </CatalogPageWrapper>\r\n     {showModal && <Modal onClose={toggleModal} campers={selectedCamper} />}\r\n   </>\r\n  );\r\n};\r\n\r\nexport default CatalogPage;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,CAAAC,UAAU,KAAM,kCAAkC,CACzD,MAAO,CAAAC,WAAW,KAAM,oCAAoC,CAC5D,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,KAAK,KAAQ,wBAAwB,CAC9C,OAASC,aAAa,CAAEC,UAAU,CAAEC,eAAe,CAAEC,WAAW,CAAEC,SAAS,KAAQ,iBAAiB,CAEpG,OAASC,kBAAkB,CAAEC,WAAW,CAAEC,MAAM,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/E,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,OAAO,CAAGpB,WAAW,CAACK,aAAa,CAAC,CAC1C,KAAM,CAAAgB,IAAI,CAAGrB,WAAW,CAACM,UAAU,CAAC,CACpC,KAAM,CAAAgB,SAAS,CAAGtB,WAAW,CAACO,eAAe,CAAC,CAC9C,KAAM,CAAAgB,KAAK,CAAGvB,WAAW,CAACQ,WAAW,CAAC,CACtC,KAAM,CAAAgB,QAAQ,CAAGzB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAA0B,GAAG,CAAGzB,WAAW,CAACS,SAAS,CAAC,CAElC,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC8B,cAAc,CAAEC,iBAAiB,CAAC,CAAG/B,QAAQ,CAAC,IAAI,CAAC,CAE1DgC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAEN,GAAG,CAAC,CAEvB5B,SAAS,CAAC,IAAM,CACd2B,QAAQ,CAACrB,YAAY,CAAC,CAAC,CAAC,CAC1B,CAAC,CAAE,CAACqB,QAAQ,CAAC,CAAC,CAEd,GAAIF,SAAS,EAAI,CAACC,KAAK,CAAE,CACvB,mBAAOT,IAAA,MAAAkB,QAAA,CAAG,wBAAsB,CAAG,CAAC,CACtC,CAEA,GAAIT,KAAK,CAAE,CACT,mBAAOT,IAAA,MAAAkB,QAAA,CAAIT,KAAK,CAAI,CAAC,CACvB,CAEA,KAAM,CAAAU,WAAW,CAAGC,IAAI,EAAI,CAC1BP,YAAY,CAAC,CAACD,SAAS,CAAC,CACxBG,iBAAiB,CAACK,IAAI,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBX,QAAQ,CAACrB,YAAY,CAACkB,IAAI,CAAG,CAAC,CAAC,CAAC,CAClC,CAAC,CAED,mBACCL,KAAA,CAAAE,SAAA,EAAAc,QAAA,eACChB,KAAA,CAACN,kBAAkB,EAAAsB,QAAA,eACjBlB,IAAA,CAACb,UAAU,GAAE,CAAC,cACde,KAAA,CAACL,WAAW,EAAAqB,QAAA,eACVlB,IAAA,CAACZ,WAAW,EAACkB,OAAO,CAAEA,OAAQ,CAACa,WAAW,CAAEA,WAAY,CAAC,CAAC,CACzDb,OAAO,CAACgB,MAAM,CAAG,CAAC,EAAI,CAACd,SAAS,eAAIR,IAAA,CAACF,MAAM,EAACyB,OAAO,CAAEF,UAAW,CAAAH,QAAA,CAAC,WAAS,CAAQ,CAAC,EACzE,CAAC,EACI,CAAC,CACnBN,SAAS,eAAIZ,IAAA,CAACV,KAAK,EAACkC,OAAO,CAAEL,WAAY,CAACb,OAAO,CAAEQ,cAAe,CAAE,CAAC,EACtE,CAAC,CAEN,CAAC,CAED,cAAe,CAAAT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}