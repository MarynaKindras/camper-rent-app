{"version":3,"file":"static/js/713.b63d8de8.chunk.js","mappings":"sQAEO,MAAMA,EAAqBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kEAM/BC,EAAcJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMxBG,EAASN,EAAAA,GAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6J,uBCF/B,MAuDA,EAvDoBM,KAClB,MAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IACzBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IACxBC,GAAQR,EAAAA,EAAAA,IAAYS,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,OAEVC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,OAC9CG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAEjCK,EAAAA,EAAAA,YAAU,KAENT,EADW,IAATO,GACOG,EAAAA,EAAAA,OAEAC,EAAAA,EAAAA,IAAgBJ,GAC3B,GACC,CAACP,EAAUO,IAEd,MAAMK,EAAcC,IAClBV,GAAcD,GACdI,EAAkBO,EAAK,EAOzB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACpC,EAAkB,CAAAsC,SAAA,EACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,KACXJ,EAAAA,EAAAA,MAAC/B,EAAW,CAAAiC,SAAA,CACTpB,IAAaqB,EAAAA,EAAAA,KAACE,EAAAA,EAAM,IACpBrB,IAASgB,EAAAA,EAAAA,MAAC7B,EAAM,CAAA+B,SAAA,CAAC,SAAM,GAAAI,OAAItB,MACR,IAAnBT,EAAQgC,QACPJ,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CAACjC,QAAmC,IAA1BG,EAAe6B,OAAehC,EAAUG,EAAgBoB,YAAaA,KAE3FK,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAACC,KAAK,oBAGhB9B,EAAa,GAA+B,IAA1BF,EAAe6B,SAChCJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,KAAK,SAASC,QAlBjBC,KACjBpB,GAAQqB,GAAQA,EAAO,GAAE,EAiB6Bb,SAAC,oBAMpDd,IAAae,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACC,QAASnB,EAAavB,QAASgB,MACnD,C","sources":["pages/CatalogPage/CatalogPage.module.js","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CatalogPageWrapper = styled.div`\r\n  display: flex;\r\n  gap: 64px;\r\n  padding: 100px 64px;\r\n`;\r\n\r\nexport const ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Errors = styled.h2`\r\n  font-size: 30px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  overflow: hidden;\r\n  transform: translate(-50%, -50%);\r\n  color: #e44848;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FiltersBar from 'components/FiltersBar/FiltersBar';\r\nimport CatalogList from 'components/CatalogList/CatalogList';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { fetchCampers, loadMoreCampers } from 'store/operations';\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport NoInform from 'components/NoInform/NoInform';\r\nimport { selectCampers, selectRespLength, selectIsLoading, selectError, selectFilteredCampers } from 'store/selectors';\r\nimport { CatalogPageWrapper, ListWrapper, Errors } from './CatalogPage.module';\r\nimport { MoreButton } from 'components/MainButton/MainButton.styled';\r\n\r\nconst CatalogPage = () => {\r\n  const campers = useSelector(selectCampers);\r\n  const filtredCampers = useSelector(selectFilteredCampers);\r\n  const respLength = useSelector(selectRespLength);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedCamper, setSelectedCamper] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (page === 1) {\r\n      dispatch(fetchCampers());\r\n    } else {\r\n      dispatch(loadMoreCampers(page));\r\n    }\r\n  }, [dispatch, page]);\r\n\r\n  const toggleModal = data => {\r\n    setShowModal(!showModal);\r\n    setSelectedCamper(data);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    setPage(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CatalogPageWrapper>\r\n        <FiltersBar />\r\n        <ListWrapper>\r\n          {isLoading && <Loader />}\r\n          {error && <Errors>error:{`${error}`}</Errors>}\r\n          {campers.length !== 0 ? (\r\n            <CatalogList campers={filtredCampers.length === 0 ? campers : filtredCampers} toggleModal={toggleModal} />\r\n          ) : (\r\n            <NoInform text=\"not information\" />\r\n          )}\r\n\r\n          {respLength > 1 && filtredCampers.length === 0 && (\r\n            <MoreButton type=\"button\" onClick={onLoadMore}>\r\n              Load more\r\n            </MoreButton>\r\n          )}\r\n        </ListWrapper>\r\n      </CatalogPageWrapper>\r\n      {showModal && <Modal onClose={toggleModal} campers={selectedCamper} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CatalogPage;\r\n"],"names":["CatalogPageWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ListWrapper","_templateObject2","Errors","h2","_templateObject3","CatalogPage","campers","useSelector","selectCampers","filtredCampers","selectFilteredCampers","respLength","selectRespLength","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","showModal","setShowModal","useState","selectedCamper","setSelectedCamper","page","setPage","useEffect","fetchCampers","loadMoreCampers","toggleModal","data","_jsxs","_Fragment","children","_jsx","FiltersBar","Loader","concat","length","CatalogList","NoInform","text","MoreButton","type","onClick","onLoadMore","prev","Modal","onClose"],"sourceRoot":""}